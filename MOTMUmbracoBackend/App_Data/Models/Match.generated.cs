//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Match</summary>
	[PublishedContentModel("match")]
	public partial class Match : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "match";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Match(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Match, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Match address: The address where the match is played
		///</summary>
		[ImplementPropertyType("matchAddress")]
		public string MatchAddress
		{
			get { return this.GetPropertyValue<string>("matchAddress"); }
		}

		///<summary>
		/// Match start date time
		///</summary>
		[ImplementPropertyType("matchStartDateTime")]
		public DateTime MatchStartDateTime
		{
			get { return this.GetPropertyValue<DateTime>("matchStartDateTime"); }
		}

		///<summary>
		/// Opponent: The match opponent name
		///</summary>
		[ImplementPropertyType("opponent")]
		public string Opponent
		{
			get { return this.GetPropertyValue<string>("opponent"); }
		}

		///<summary>
		/// Status
		///</summary>
		[ImplementPropertyType("status")]
		public object Status
		{
			get { return this.GetPropertyValue("status"); }
		}
	}
}
